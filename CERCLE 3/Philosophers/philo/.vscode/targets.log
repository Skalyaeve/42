make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Fri Jun 24 21:21:04 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
DESKTOP_SESSION = ubuntu
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# environment
XDG_SESSION_TYPE = x11
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'Makefile', line 24)
INCLUDES = $(shell find $(INCLUDESDIR) -type f -name "*.h")
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /mnt/nfs/homes/anguinau/.Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile
CURDIR := /mnt/nfs/homes/anguinau/anguinau/philo
# makefile
SHELL = /bin/sh
# makefile (from 'Makefile', line 21)
RM = rm -rf
# makefile (from 'Makefile', line 31)
_RED = \e[91m
# environment
VSCODE_NLS_CONFIG = {"locale":"fr","availableLanguages":{"*":"fr"},"_languagePackId":"575d78304484aa5fa0cbb32d34fd883d.fr","_translationsConfigFile":"/mnt/nfs/homes/anguinau/.config/Code/clp/575d78304484aa5fa0cbb32d34fd883d.fr/tcf.json","_cacheRoot":"/mnt/nfs/homes/anguinau/.config/Code/clp/575d78304484aa5fa0cbb32d34fd883d.fr","_resolvedLanguagePackCoreLocation":"/mnt/nfs/homes/anguinau/.config/Code/clp/575d78304484aa5fa0cbb32d34fd883d.fr/30d9c6cd9483b2cc586687151bcbcd635f373630","_corruptedFile":"/mnt/nfs/homes/anguinau/.config/Code/clp/575d78304484aa5fa0cbb32d34fd883d.fr/corrupted.info","_languagePackSupport":true}
# environment
_ = /usr/share/code/code
# makefile (from 'Makefile', line 19)
CFLAGS = -Wall -Wextra -Werror 
# environment
JOURNAL_STREAM = 9:1107442
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# automatic
@F = $(notdir $@)
# environment
GIO_LAUNCHED_DESKTOP_FILE = /usr/share/applications/code.desktop
# makefile (from 'Makefile', line 16)
SRCSDIR = srcs
# 'override' directive
GNUMAKEFLAGS := 
# environment
MANDATORY_PATH = /usr/share/gconf/ubuntu.mandatory.path
# environment
XDG_DATA_DIRS = /usr/share/gnome:/usr/share/ubuntu:/mnt/nfs/homes/anguinau/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share:/var/lib/snapd/desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/38898/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from 'Makefile', line 25)
OBJS = $(subst $(SRCSDIR),$(OBJSDIR),$(SRCS:.c=.o))
# makefile (from 'Makefile', line 30)
_STOP = \e[0m
# environment
MANAGERPID = 287115
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/38898/vscode-ipc-85da2b27-432d-41b2-907d-3cd6ecff2887.sock
# environment
VSCODE_CWD = /mnt/nfs/homes/anguinau
# environment
XDG_SESSION_PATH = /org/freedesktop/DisplayManager/Session8
# environment
KRB5CCNAME = FILE:/tmp/krb5cc_38898_q6y9JV
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile (from 'Makefile', line 32)
_YELLOW = \e[93m
# environment
PATH = /mnt/nfs/homes/anguinau/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# makefile (from 'Makefile', line 39)
define update_bar
	progress =	$(shell echo "$(INDEX) * 35 / $(BUILD_SIZE)" | bc)
	ifeq ($(progress), 0)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_RED)                                 $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_RED)0%]$(_STOP)
	else ifeq ($(progress), 1)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_RED)o                                $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_RED)3%]$(_STOP)
	else ifeq ($(progress), 2)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_RED)oo                               $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_RED)6%]$(_STOP)
	else ifeq ($(progress), 3)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_RED)ooo                              $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_RED)9%]$(_STOP)
	else ifeq ($(progress), 4)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_RED)oooo                             $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_RED)12%$(_STOP)]
	else ifeq ($(progress), 5)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_RED)ooooo                            $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_RED)15%$(_STOP)]
	else ifeq ($(progress), 6)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_RED)oooooo                           $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_RED)18%$(_STOP)]
	else ifeq ($(progress), 7)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_RED)ooooooo                          $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_RED)21%$(_STOP)]
	else ifeq ($(progress), 8)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_RED)oooooooo                         $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_RED)24%$(_STOP)]
	else ifeq ($(progress), 9)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_RED)ooooooooo                        $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_RED)27%$(_STOP)]
	else ifeq ($(progress), 10)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_RED)oooooooooo                       $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_RED)30%$(_STOP)]
	else ifeq ($(progress), 11)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_YELLOW)ooooooooooo                      $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_YELLOW)33%$(_STOP)]
	else ifeq ($(progress), 12)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_YELLOW)oooooooooooo                     $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_YELLOW)36%$(_STOP)]
	else ifeq ($(progress), 13)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_YELLOW)ooooooooooooo                    $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_YELLOW)39%$(_STOP)]
	else ifeq ($(progress), 14)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_YELLOW)oooooooooooooo                   $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_YELLOW)42%$(_STOP)]
	else ifeq ($(progress), 15)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_YELLOW)ooooooooooooooo                  $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_YELLOW)45%$(_STOP)]
	else ifeq ($(progress), 16)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_YELLOW)oooooooooooooooo                 $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_YELLOW)48%$(_STOP)]
	else ifeq ($(progress), 17)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_YELLOW)ooooooooooooooooo                $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_YELLOW)51%$(_STOP)]
	else ifeq ($(progress), 18)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_YELLOW)oooooooooooooooooo               $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_YELLOW)54%$(_STOP)]
	else ifeq ($(progress), 19)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_YELLOW)ooooooooooooooooooo              $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_YELLOW)57%$(_STOP)]
	else ifeq ($(progress), 20)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_YELLOW)oooooooooooooooooooo             $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_YELLOW)60%$(_STOP)]
	else ifeq ($(progress), 21)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_YELLOW)ooooooooooooooooooooo            $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_YELLOW)63%$(_STOP)]
	else ifeq ($(progress), 22)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_YELLOW)oooooooooooooooooooooo           $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_YELLOW)66%$(_STOP)]
	else ifeq ($(progress), 23)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_GREEN)ooooooooooooooooooooooo          $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_GREEN)69%$(_STOP)]
	else ifeq ($(progress), 24)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_GREEN)oooooooooooooooooooooooo         $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_GREEN)72%$(_STOP)]
	else ifeq ($(progress), 25)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_GREEN)ooooooooooooooooooooooooo        $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_GREEN)75%$(_STOP)]
	else ifeq ($(progress), 26)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_GREEN)oooooooooooooooooooooooooo       $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_GREEN)78%$(_STOP)]
	else ifeq ($(progress), 27)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_GREEN)ooooooooooooooooooooooooooo      $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_GREEN)81%$(_STOP)]
	else ifeq ($(progress), 28)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_GREEN)oooooooooooooooooooooooooooo     $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_GREEN)84%$(_STOP)]
	else ifeq ($(progress), 29)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_GREEN)ooooooooooooooooooooooooooooo    $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_GREEN)87%$(_STOP)]
	else ifeq ($(progress), 30)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_GREEN)oooooooooooooooooooooooooooooo   $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_GREEN)90%$(_STOP)]
	else ifeq ($(progress), 31)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_GREEN)ooooooooooooooooooooooooooooooo  $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_GREEN)93%$(_STOP)]
	else ifeq ($(progress), 32)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_GREEN)oooooooooooooooooooooooooooooooo $(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_GREEN)96%$(_STOP)]
	else ifeq ($(progress), 33)
		E_BAR	=	$(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[$(_GREEN)ooooooooooooooooooooooooooooooooo$(_STOP)]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)[$(_GREEN)100%$(_STOP)]
	endif
endef
# environment
GPG_AGENT_INFO = /run/user/38898/gnupg/S.gpg-agent:0:1
# environment
SESSION_MANAGER = local/e3r8p2.42.fr:@/tmp/.ICE-unix/287572,unix/e3r8p2.42.fr:/tmp/.ICE-unix/287572
# environment
XDG_RUNTIME_DIR = /run/user/38898
# environment
XDG_MENU_PREFIX = gnome-
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
INVOCATION_ID = 4f59ac5cc2444331a99d2e86c7233bd1
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
XDG_GREETER_DATA_DIR = /var/lib/lightdm-data/anguinau
# environment
XDG_SESSION_DESKTOP = ubuntu
# environment
SSH_AUTH_SOCK = /run/user/38898/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 291832
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /mnt/nfs/homes/anguinau/anguinau/philo
# default
.LOADED := 
# environment
SSH_AGENT_PID = 287535
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# environment
GTK_MODULES = gail:atk-bridge
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /mnt/nfs/homes/anguinau
# environment
VSCODE_CODE_CACHE_PATH = /mnt/nfs/homes/anguinau/.config/Code/CachedData/30d9c6cd9483b2cc586687151bcbcd635f373630
# environment
LOGNAME = anguinau
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'Makefile', line 18)
OBJSDIR = objs
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
QT_IM_MODULE = ibus
# makefile (from 'Makefile', line 23)
SRCS = $(shell find $(SRCSDIR) -type f -name "*.c")
# environment
SHLVL = 0
# makefile (from 'Makefile', line 20)
CC = gcc
# environment
IM_CONFIG_PHASE = 1
# default
MAKE_VERSION := 4.2.1
# environment
USER = anguinau
# makefile
.DEFAULT_GOAL := all
# environment
XDG_CURRENT_DESKTOP = Unity
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# makefile (from 'Makefile', line 17)
INCLUDESDIR = includes
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := make
# environment
OLDPWD = /mnt/nfs/homes/anguinau
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# environment
XDG_SEAT_PATH = /org/freedesktop/DisplayManager/Seat0
# environment
VSCODE_IPC_HOOK = /run/user/38898/vscode-efd197f3-1.68.1-main.sock
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'Makefile', line 27)
INDEX = 0
# environment
GDK_BACKEND = x11
# automatic
+F = $(notdir $+)
# environment
QT_ACCESSIBILITY = 1
# environment
DEFAULTS_PATH = /usr/share/gconf/ubuntu.default.path
# 'override' directive
.SHELLSTATUS := 0
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# makefile (from 'Makefile', line 34)
E_BAR = $(_RED)-$(_YELLOW)-$(_GREEN)>$(_STOP)[                              ]$(_GREEN)<$(_YELLOW)-$(_RED)-$(_STOP)
# environment
LC_ALL = C
# makefile (from 'Makefile', line 28)
BUILD_SIZE = $(shell ls srcs | wc -l)
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# environment
GJS_DEBUG_OUTPUT = stderr
# makefile (from 'Makefile', line 15)
NAME = philo
# default
.RECIPEPREFIX := 
# makefile (from 'Makefile', line 33)
_GREEN = \e[92m
# environment
LANG = C
# environment
DOCKER_HOST = unix:///run/user/38898/docker.sock
# environment
VSCODE_PID = 291832
# variable set hash-table stats:
 
# Load=119/1024=12%, Rehash=0, Collisions=16/168=10%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 59, inode 181600516): 8 files, no impossibilities.
# includes (device 59, inode 181671147): 3 files, no impossibilities so far.
# srcs (device 59, inode 181703402): 8 files, no impossibilities so far.

# 19 files, no impossibilities in 3 directories.

# Implicit Rules

objs/%.o: srcs/%.c includes/header.h
#  recipe to execute (from 'Makefile', line 136):
					@$(CC) $(CFLAGS) -c $< -o $(<:.c=.o) -include $(INCLUDES)
					@mv $(SRCSDIR)/*.o $(OBJSDIR)
					@$(eval INDEX=$(shell echo $$(($(INDEX)+1))))
					@echo -ne '	                                                \r'
					@echo -e '	$@ $(_GREEN)created$(_STOP).'
					@echo -ne '	$(E_BAR)\r'
					@$(eval $(call update_bar))

# 1 implicit rules, 0 (0.0%) terminal.

# Files

objs/main.o: srcs/main.c includes/header.h
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'main'
#  Last modified 2022-06-24 21:19:21.002962894
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 136):
					@$(CC) $(CFLAGS) -c $< -o $(<:.c=.o) -include $(INCLUDES)
					@mv $(SRCSDIR)/*.o $(OBJSDIR)
					@$(eval INDEX=$(shell echo $$(($(INDEX)+1))))
					@echo -ne '	                                                \r'
					@echo -e '	$@ $(_GREEN)created$(_STOP).'
					@echo -ne '	$(E_BAR)\r'
					@$(eval $(call update_bar))

all: philo
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

philo: objs objs/main.o objs/check_input.o objs/states.o objs/manage_philo.o objs/time.o objs/utils.o
#  Implicit rule search has not been done.
#  Last modified 2022-06-24 21:19:21.334962741
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 118):
					@${CC} $(CFLAGS) -o ${NAME} ${OBJS} -L. -lpthread
					@$(eval INDEX=$(shell echo $$(($(INDEX)+1))))
					@$(eval BUILD_SIZE=$(shell echo $$(($(BUILD_SIZE)+1))))
					@echo -ne '	                                                \r'
					@echo -e '	$(NAME) $(_GREEN)created$(_STOP).'
					@echo -e '	[$(_GREEN)100%$(_STOP)]'
					@$(eval $(call update_bar))

.PHONY: all bonus clean fclean re
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

objs/manage_philo.o: srcs/manage_philo.c includes/header.h
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'manage_philo'
#  Last modified 2022-06-24 21:19:21.166962818
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 136):
					@$(CC) $(CFLAGS) -c $< -o $(<:.c=.o) -include $(INCLUDES)
					@mv $(SRCSDIR)/*.o $(OBJSDIR)
					@$(eval INDEX=$(shell echo $$(($(INDEX)+1))))
					@echo -ne '	                                                \r'
					@echo -e '	$@ $(_GREEN)created$(_STOP).'
					@echo -ne '	$(E_BAR)\r'
					@$(eval $(call update_bar))

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-23 18:22:49.720990543
#  File has been updated.
#  Successfully updated.

# Not a target:
srcs/main.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-23 18:22:49.732990542
#  File has been updated.
#  Successfully updated.

objs:
#  Implicit rule search has not been done.
#  Last modified 2022-06-24 21:19:21.282962765
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 127):
					@mkdir $(OBJSDIR)
					@$(eval INDEX=$(shell echo $$(($(INDEX)+1))))
					@$(eval BUILD_SIZE=$(shell echo $$(($(BUILD_SIZE)+1))))
					@echo -ne '	                                                \r'
					@echo -e '	objs directory $(_GREEN)created$(_STOP).'
					@echo -ne '	$(E_BAR)\r'
					@$(eval $(call update_bar))

# Not a target:
srcs/manage_philo.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-23 18:22:49.736990541
#  File has been updated.
#  Successfully updated.

objs/check_input.o: srcs/check_input.c includes/header.h
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'check_input'
#  Last modified 2022-06-24 21:19:21.058962868
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 136):
					@$(CC) $(CFLAGS) -c $< -o $(<:.c=.o) -include $(INCLUDES)
					@mv $(SRCSDIR)/*.o $(OBJSDIR)
					@$(eval INDEX=$(shell echo $$(($(INDEX)+1))))
					@echo -ne '	                                                \r'
					@echo -e '	$@ $(_GREEN)created$(_STOP).'
					@echo -ne '	$(E_BAR)\r'
					@$(eval $(call update_bar))

bonus:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

fclean: clean
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 152):
					@$(RM) $(NAME)
					@echo -ne '	                                                \r'
					@echo -e '	$(NAME) $(_GREEN)removed$(_STOP).'

objs/time.o: srcs/time.c includes/header.h
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'time'
#  Last modified 2022-06-24 21:19:21.226962791
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 136):
					@$(CC) $(CFLAGS) -c $< -o $(<:.c=.o) -include $(INCLUDES)
					@mv $(SRCSDIR)/*.o $(OBJSDIR)
					@$(eval INDEX=$(shell echo $$(($(INDEX)+1))))
					@echo -ne '	                                                \r'
					@echo -e '	$@ $(_GREEN)created$(_STOP).'
					@echo -ne '	$(E_BAR)\r'
					@$(eval $(call update_bar))

objs/utils.o: srcs/utils.c includes/header.h
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'utils'
#  Last modified 2022-06-24 21:19:21.278962766
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 136):
					@$(CC) $(CFLAGS) -c $< -o $(<:.c=.o) -include $(INCLUDES)
					@mv $(SRCSDIR)/*.o $(OBJSDIR)
					@$(eval INDEX=$(shell echo $$(($(INDEX)+1))))
					@echo -ne '	                                                \r'
					@echo -e '	$@ $(_GREEN)created$(_STOP).'
					@echo -ne '	$(E_BAR)\r'
					@$(eval $(call update_bar))

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

re: fclean all
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 146):
					@$(RM) $(OBJSDIR)
					@echo -ne '	                                                \r'
					@echo -e '	objs directory $(_GREEN)removed$(_STOP).'

objs/states.o: srcs/states.c includes/header.h
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'states'
#  Last modified 2022-06-24 21:19:21.110962844
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 136):
					@$(CC) $(CFLAGS) -c $< -o $(<:.c=.o) -include $(INCLUDES)
					@mv $(SRCSDIR)/*.o $(OBJSDIR)
					@$(eval INDEX=$(shell echo $$(($(INDEX)+1))))
					@echo -ne '	                                                \r'
					@echo -e '	$@ $(_GREEN)created$(_STOP).'
					@echo -ne '	$(E_BAR)\r'
					@$(eval $(call update_bar))

# Not a target:
srcs/check_input.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-23 18:22:49.728990542
#  File has been updated.
#  Successfully updated.

# Not a target:
srcs/time.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-24 21:18:51.818976406
#  File has been updated.
#  Successfully updated.

# Not a target:
includes/header.h:
#  Implicit rule search has been done.
#  Last modified 2022-06-23 18:22:49.724990543
#  File has been updated.
#  Successfully updated.

# Not a target:
srcs/utils.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-23 18:22:49.744990539
#  File has been updated.
#  Successfully updated.

# Not a target:
srcs/states.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-24 21:17:00.155028614
#  File has been updated.
#  Successfully updated.

# files hash-table stats:
# Load=24/1024=2%, Rehash=0, Collisions=8/83=10%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 46 / storage = 464 B / avg = 10 B
# current buf: size = 8162 B / used = 464 B / count = 46 / avg = 10 B

# strcache performance: lookups = 93 / hit rate = 50%
# hash-table stats:
# Load=46/8192=1%, Rehash=0, Collisions=3/93=3%
# Finished Make data base on Fri Jun 24 21:21:04 2022

 
